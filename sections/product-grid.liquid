<section class="{{ section.id }}">
  <div
    class="layout py-2 {% if section.settings.isFullWidth %}lg:w-full{% endif %}"
    style="background-color:{{ section.settings.bg_color }} !important;"
  >
    <div class="flex flex-wrap text-sm">
      <div class="w-full">
        <ul class="product-grid-filter flex {{ section.settings.tag_alignment }} gap-3 overflow-hidden overflow-x-auto py-1 scroll-none">
          {%- for block in section.blocks -%}
            <label>
              <input
                type="radio"
                {% unless forloop.index != 1 %}
                  checked
                {% endunless %}
                class="hidden"
                name="filter-producttype"
                value="{{ collections[block.settings.collection].title | handleize  }}"
              >
              {%- if section.settings.tag_style == 'underline' -%}
                <span class="underline_style  inline-block cursor-pointer py-1 mx-1.5  text-textColor font-semibold whitespace-nowrap capitalize {% if section.settings.isDefaultOverride %}underline_revert{% endif %}">
                  {% if block.settings.collection == null -%}
                    Collection title
                  {%- else %}
                    {{- collections[block.settings.collection].title -}}
                  {% endif %}
                </span>
              {%- else -%}
                <span class="btn_style {{ settings.btn_style }} inline-block cursor-pointer p-1 px-1.5 bg-[#d6d5d5] text-textColor border-none whitespace-nowrap capitalize {% if section.settings.isDefaultOverride %}btn-revert{% endif %}">
                  {% if block.settings.collection == null -%}
                    Collection title
                  {%- else %}
                    {{- collections[block.settings.collection].title -}}
                  {% endif %}
                </span>
              {%- endif -%}
            </label>
          {%- endfor -%}
        </ul>
      </div>
    </div>
    <product-grid>
      {%- for block in section.blocks -%}
        <div
          class="grid-container {% unless forloop.first %}hidden{% endunless %}"
          id="grid-{{ collections[block.settings.collection].title | handleize }}"
        >
          
            <div class="flex flex-wrap md:flex-nowrap justify-around gap-2 mt-2 sm:p-1 md:p-0">
              {%- assign products = collections[block.settings.collection].products -%}
              {% if block.settings.collection != null %}
                {%- for product in products limit: 6 offset: 0 -%}
                  {%- render 'product-card', product: product, class: 'product-card w-[48%] lg:w-1/6' -%}
                {%- endfor -%}
              {% else %}
                {%- for i in (1..6) -%}
                  {%- render 'product-card', product: false, class: 'product-card w-[48%] lg:w-1/6' -%}
                {%- endfor -%}
              {% endif %}
            </div>
          
          {%- if section.settings.product_limit > 6 -%}
            <div class="flex flex-wrap md:flex-nowrap justify-around gap-2 mt-2 sm:p-1 md:p-0">
              {%- assign products = collections[block.settings.collection].products -%}
              {% if block.settings.collection != null %}
                {%- for product in products limit: 6 offset: 6 -%}
                  {%- render 'product-card', product: product, class: 'product-card w-[48%] lg:w-1/6' -%}
                {%- endfor -%}
              {% else %}
                {%- for i in (1..6) -%}
                  {%- render 'product-card', product: false, class: 'product-card w-[48%] lg:w-1/6' -%}
                {%- endfor -%}
              {% endif %}
            </div>
          {%- endif -%}
          {%- if section.settings.product_limit > 12 -%}
            <div class="flex flex-wrap md:flex-nowrap justify-around gap-2 mt-2 sm:p-1 md:p-0">
              {%- assign products = collections[block.settings.collection].products -%}
              {% if block.settings.collection != null %}
                {%- for product in products limit: 6 offset: 12 -%}
                  {%- render 'product-card', product: product, class: 'product-card w-[48%] lg:w-1/6' -%}
                {%- endfor -%}
              {% else %}
                {%- for i in (1..6) -%}
                  {%- render 'product-card', product: false, class: 'product-card w-[48%] lg:w-1/6' -%}
                {%- endfor -%}
              {% endif %}
            </div>
          {%- endif -%}

          <br>
          <a
            href="{{ collections.all.url }}"
            class="{{ settings.btn_style }} block sm:w-1/2 md:w-1/6 mx-auto text-center {% if section.settings.isDefaultOverride %}btn{% endif %}"
          >
            {{- section.settings.btn_text -}}
          </a>
        </div>
      {%- endfor -%}
    </product-grid>
  </div>
</section>

{% if section.settings.isDefaultOverride %}
  <style>
    .{{ section.id }} .btn {
      color: {{ section.settings.btn_color }};
      background-color: {{ section.settings.btn_bg_color }};
      border-color: {{ section.settings.btn_border_color }};
    }
      .{{ section.id }} .btn-revert:hover {
        background-color: {{ section.settings.btn_bg_color }} !important;
        color: {{ section.settings.btn_color }} !important;
        border-color: {{ section.settings.btn_border_color }} !important;
    }

    .{{ section.id }} input[type='radio']:checked + .btn-revert {
      background-color: {{ section.settings.btn_bg_color }};
      color: {{ section.settings.btn_color }};
      border-color: {{ section.settings.btn_border_color }};
    }
    .{{ section.id }} .underline_style {
      color: {{ section.settings.underline_color }};
    }
    .{{ section.id }} input[type='radio']:checked + .underline_revert {
      color: {{ section.settings.underline_color }};
      border-color: {{ section.settings.underline_color }};
    }
  </style>
{% endif %}

{% schema %}
{
  "name": "Products Grid",
  "settings": [
    {
      "type": "range",
      "id": "product_limit",
      "min": 6,
      "max": 18,
      "step": 6,
      "label": "Products Show",
      "default": 12
    },
    {
      "type": "select",
      "id": "tag_style",
      "label": "Tag Style",
      "options": [
        {
          "value": "btn",
          "label": "Button"
        },
        {
          "value": "underline",
          "label": "Underline"
        }
      ],
      "default": "btn",
      "info": "Select the style of the tags used for filtering products."
    },
    {
      "type": "select",
      "id": "tag_alignment",
      "label": "Tag Alignment",
      "options": [
        {
          "value": "justify-start",
          "label": "Left"
        },
        {
          "value": "justify-center",
          "label": "Center"
        },
        {
          "value": "justify-start flex-row-reverse",
          "label": "Right"
        }
      ],
      "default": "justify-start",
      "info": "Select the alignment of the tags used for filtering products."
    },
    {
      "type": "text",
      "id": "btn_text",
      "label": "Button Text",
      "default": "View More"
    },
    {
      "type": "header",
      "content": "Section Settings & Styling"
    },
    {
      "type": "checkbox",
      "id": "isFullWidth",
      "label": "Full Width",
      "default": false,
      "info": "This option work on large screen only"
    },
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "transparent"
    },
    {
      "type": "header",
      "content": "Override Theme Colors"
    },
    {
      "type": "checkbox",
      "id": "isDefaultOverride",
      "label": "Enable",
      "default": false,
      "info": "Enable this option to override the theme colors."
    },
    {
      "type": "header",
      "content": "Tag Underline Style",
      "info": "This style is applied when the tag style is set to 'Underline'."
    },
    {
      "type": "color",
      "id": "underline_color",
      "label": "Underline Color",
      "default": "#333"
    },
    {
      "type": "header",
      "content": "Button Style",
      "info": "This style is applied when the tag style is set to 'Button'."
    },
    {
      "type": "color",
      "id": "btn_color",
      "label": "Text Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "btn_bg_color",
      "label": "Button Background Color",
      "default": "#333"
    },
    {
      "type": "color",
      "id": "btn_border_color",
      "label": "Button border Color",
      "default": "#333"
    }
  ],
  "blocks": [
    {
      "name": "collection",
      "type": "product-group",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Products Grid",
      "settings": {},
      "blocks": [
        {
          "type": "product-group"
        },
        {
          "type": "product-group"
        },
        {
          "type": "product-group"
        }
      ]
    }
  ]
}
{% endschema %}
